// Generated by CoffeeScript 1.6.3
(function() {
  var APP_NAME, DIRECTIVE_MODULE, app;

  APP_NAME = 'roamaor';

  DIRECTIVE_MODULE = "" + APP_NAME + ".directives";

  angular.module(DIRECTIVE_MODULE, []);

  angular.module(DIRECTIVE_MODULE).directive('topNavbar', function($location) {
    var directive;
    return directive = {
      replace: true,
      template: "<div class=\"navbar\">\n    <div class=\"navbar-inner\">\n        <a class=\"brand\" href=\"#\">{{appName}}</a>\n        <ul class=\"nav\">\n            <li ng-repeat=\"link in navLinks\"\n                ng-class=\"{active: currentPath == link.href}\">\n                    <a href=\"{{link.href}}\">{{link.title}}</a>\n            </li>\n        </ul>\n    </div>\n</div>",
      link: function(scope) {
        scope.navLinks = [
          {
            href: '/',
            title: 'Home'
          }
        ];
        return scope.$on("$routeChangeSuccess", function(e, current, previous) {
          return scope.currentPath = $location.path();
        });
      }
    };
  });

  angular.module(DIRECTIVE_MODULE).directive('userFeedback', function() {
    var directive;
    return directive = {
      replace: true,
      template: "<div class=\"row\" ng-show=\"userAlert\">\n    <div class=\"small-12\">\n        <div data-alert class=\"alert-box\">\n            {{userAlert}}\n            <a href=\"#\" class=\"close\">&times;</a>\n        </div>\n    </div>\n</div>",
      link: function(scope) {}
    };
  });

  app = angular.module(APP_NAME, ["" + APP_NAME + ".directives"]).run(function($rootScope, $http) {
    $rootScope.appName = "Roamoar";
    $rootScope.myToon = null;
    $rootScope.alertUser = function(string) {
      return $rootScope.userAlert = string;
    };
    $rootScope.setMyToon = function(toon) {
      $rootScope.myToon = toon;
      return $rootScope.$broadcast("myToonUpdated");
    };
    $http.get("/api/admin/alltoons").then(function(response) {
      return $rootScope.allToons = response.data;
    });
    return $http.get("/api/bootstrap").then(function(response) {
      if (!response.data.success) {
        $rootScope.alertUser("Failed to fetch bootstrap bundle. (" + response.data.reason + ")");
        return;
      }
      $rootScope.worldHeight = response.data.worldHeight;
      $rootScope.worldWidth = response.data.worldWidth;
      $rootScope.myUser = response.data.user;
      console.log('$rootScope.myUser:', $rootScope.myUser);
      if (response.data.toon) {
        return $rootScope.setMyToon(response.data.toon);
      }
    });
  });

  angular.module(APP_NAME).controller('HomeCtrl', function($scope, $rootScope, $http, $timeout) {
    var lineFunc, mapColor, myDest, myDestPath, renderToon, scaleX, scaleY, svg, toonRadius, toonSvgCoords, triFunc;
    mapColor = "#E7E7E7";
    toonRadius = 5;
    scaleX = null;
    scaleY = null;
    svg = d3.select("svg").attr("height", 500).style("background-color", mapColor).style("box-shadow", "1px 1px 1px #999");
    lineFunc = d3.svg.line().x(function(d) {
      return d.x;
    }).y(function(d) {
      return d.y;
    }).interpolate('linear');
    triFunc = d3.svg.symbol().type("triangle-up");
    myDest = svg.append("circle").attr("id", "my-dest").attr("cx", 0).attr("cy", 0).attr("r", 5).style("fill", mapColor);
    myDestPath = svg.append("path").attr("id", "my-dest-path");
    toonSvgCoords = function(toon) {
      return {
        x: toon.LocX + toonRadius,
        y: svg.attr("height") - toon.LocY - toonRadius
      };
    };
    $scope.mapClick = function($event) {
      var destPointData, destX, destY, height, lineData, postData, scaledDestX, scaledDestY, svgHeightScale, svgWidthScale, toon, toonCoords, width, yOffset;
      toon = $rootScope.myToon;
      toonCoords = toonSvgCoords(toon);
      destX = $event.offsetX;
      destY = $event.offsetY;
      lineData = [
        {
          x: toonCoords.x,
          y: toonCoords.y
        }, {
          x: destX,
          y: destY
        }
      ];
      yOffset = 10;
      width = 10;
      height = 10;
      destPointData = [
        {
          x: destX,
          y: destY - yOffset
        }, {
          x: destX - width / 2,
          y: destY - yOffset - height
        }, {
          x: destX + width / 2,
          y: destY - yOffset - height
        }, {
          x: destX,
          y: destY - yOffset
        }
      ];
      console.log('destPointData:', destPointData);
      d3.select("#my-dest-point").remove();
      svg.append("path").attr("id", "my-dest-point").attr("d", lineFunc(destPointData)).attr("stroke", "#555").attr("stroke-width", 1).attr("fill", "none").attr("opacity", 0).transition().duration(600).attr("opacity", 1).attr("transform", "translate(0, " + yOffset + ")");
      svgHeightScale = parseInt(svg.style("height")) / $rootScope.worldHeight;
      svgWidthScale = parseInt(svg.style("width")) / $rootScope.worldWidth;
      scaledDestX = destX / svgWidthScale;
      scaledDestY = destY / svgHeightScale;
      postData = {
        x: scaledDestX,
        y: scaledDestY
      };
      return $http.post("/api/destination", postData).then(function(response) {
        return console.log('response:', response);
      });
    };
    renderToon = function() {
      var coords, svgHeight, toon, toonLoc;
      if (!$rootScope.myToon) {
        throw "myToon not set";
      }
      svgHeight = svg.attr("height");
      toon = $rootScope.myToon;
      coords = toonSvgCoords(toon);
      toonLoc = svg.append("circle").attr("id", "toon-" + toon._id).attr("cx", coords.x).attr("cy", coords.y).attr("r", toonRadius).style("fill", "#E7E7E7");
      return toonLoc.transition().delay(500).style("fill", "#777");
    };
    if ($rootScope.myToon) {
      renderToon();
    }
    return $scope.$on("myToonUpdated", function() {
      return renderToon();
    });
  });

  angular.module(APP_NAME).config([
    '$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {
      var url, urlBase;
      urlBase = '/app';
      url = function(url) {
        return "" + urlBase + "/url";
      };
      $routeProvider.when(urlBase, {
        controller: 'HomeCtrl',
        templateUrl: 'static/partials/home.html'
      });
      return $locationProvider.html5Mode(true).hashPrefix('!');
    }
  ]);

  angular.module(APP_NAME).controller('AdminCtrl', function($scope, $rootScope, $http) {
    $scope.admin = {};
    $scope.submitNewPlayer = function(name) {
      var data;
      console.log('name:', name);
      data = {
        name: name
      };
      return $http.post("/api/admin/newtoon", data).then(function(response) {
        return console.log('response:', response);
      });
    };
    return $scope.selectedToonChange = function(toon) {
      var data;
      console.log('toon:', toon);
      data = {
        toonId: toon._id
      };
      $rootScope.setMyToon(toon);
      return $http.post("/api/activetoon", data).then(function(response) {
        return console.log('response:', response.status, response.data);
      });
    };
  });

}).call(this);
